services:
  mongodb:
    image: mongo:latest
    container_name: agrich
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - agrichat-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: ./agrichat-backend/Dockerfile
    container_name: agrichat-backend
    network_mode: host
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://localhost:27017/agrichat
      - USE_HTTPS=${USE_HTTPS:-false}
      - USE_FAST_MODE=${USE_FAST_MODE:-true}
      - DISABLE_RECOMMENDATIONS=${DISABLE_RECOMMENDATIONS:-false}
      - PARALLEL_RECOMMENDATIONS=${PARALLEL_RECOMMENDATIONS:-true}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - OLLAMA_HOST=localhost:11434
      - CUDA_VISIBLE_DEVICES=0,1
      - OLLAMA_NUM_PARALLEL=4
      - OLLAMA_MAX_LOADED_MODELS=2
      # Context Manager Configuration
      - CONTEXT_MEMORY_STRATEGY=${CONTEXT_MEMORY_STRATEGY:-auto}
      - CONTEXT_MAX_PAIRS=${CONTEXT_MAX_PAIRS:-5}
      - CONTEXT_MAX_TOKENS=${CONTEXT_MAX_TOKENS:-800}
      - CONTEXT_HYBRID_BUFFER_PAIRS=${CONTEXT_HYBRID_BUFFER_PAIRS:-3}
      - CONTEXT_SUMMARY_THRESHOLD=${CONTEXT_SUMMARY_THRESHOLD:-8}
      - ENABLE_CHAIN_OF_THOUGHT=${ENABLE_CHAIN_OF_THOUGHT:-true}
      - ENABLE_ENTITY_TRACKING=${ENABLE_ENTITY_TRACKING:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./agrichat-backend/logs:/app/logs
      - ./agrichat-backend/chromaDb:/app/chromaDb
      # Bind-mount fallback_queries.csv so container writes are visible on host
      - ./fallback_queries.csv:/app/fallback_queries.csv
      - ./agrichat-backend/ssl:/app/ssl
      - whisper_cache:/app/.cache/whisper
    restart: unless-stopped
    # GPU Support
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 12G
    # Health check for backend (simplified)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 180s
    # Production command with memory efficiency
    command: >
      sh -c "
        echo 'Starting AgriChat Backend with Enhanced Context Manager...' &&
        echo 'Context Manager Features: Auto Memory Strategy, Entity Tracking, Chain of Thought' &&
        if [ \"$$USE_HTTPS\" = \"true\" ]; then
          echo 'Starting with HTTPS support...' &&
          gunicorn app:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8443 --workers 1 --timeout 600 --worker-connections 500 --max-requests 500 --max-requests-jitter 50 --keyfile=ssl/private.key --certfile=ssl/certificate.crt --log-level info --worker-tmp-dir /dev/shm
        else
          echo 'Starting with HTTP...' &&
          gunicorn app:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers 1 --timeout 600 --worker-connections 500 --max-requests 500 --max-requests-jitter 50 --log-level info --worker-tmp-dir /dev/shm
        fi
      "

networks:
  agrichat-net:

volumes:
  mongodb_data:
  whisper_cache:
